{"version":3,"sources":["component/courselist/courselist.js","component/formlist/courseform.js","App.js","reportWebVitals.js","index.js"],"names":["Courselist","state","isedit","rendercourse","props","details","name","onClick","togglestate","delete","index","setState","updatecourseitem","e","preventDefault","edit","input","value","renderupdateform","onSubmit","type","ref","v","defaultValue","this","Fragment","Component","Courseform","addcourse","current","onChange","updatecourse","App","courses","target","loccurrent","loccourses","push","deletecourse","splice","editcourse","courselist","length","map","course","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAsDeA,E,4MAjDXC,MAAQ,CACJC,QAAS,G,EAGbC,aAAe,WACX,OACI,+BACI,+BAAO,EAAKC,MAAMC,QAAQC,OAC1B,wBAAQC,QAAS,kBAAM,EAAKC,eAA5B,yBACA,wBAAQD,QAAS,WAAO,EAAKH,MAAMK,OAAO,EAAKL,MAAMM,QAArD,wB,EAOZF,YAAc,WAAM,IACXN,EAAS,EAAKD,MAAdC,OACL,EAAKS,SAAS,CACVT,QAAUA,K,EAIlBU,iBAAkB,SAACC,GACfA,EAAEC,iBACF,EAAKV,MAAMW,KAAK,EAAKX,MAAMM,MAAO,EAAKM,MAAMC,OAC7C,EAAKT,e,EAITU,iBAAkB,WACd,OACI,uBAAMC,SAAU,EAAKP,iBAArB,UACI,uBAAOQ,KAAK,OAAOC,IAAK,SAACC,GAAK,EAAKN,MAAQM,GAAIC,aAAc,EAAKnB,MAAMC,QAAQC,OAChF,qD,4CAKd,WAAS,IACFJ,EAAUsB,KAAKvB,MAAfC,OACL,OACE,cAAC,IAAMuB,SAAP,UACGvB,EAAUsB,KAAKN,mBAAqBM,KAAKrB,qB,GA9CzBuB,aCSVC,EATI,SAACvB,GAChB,OACI,uBAAMe,SAAUf,EAAMwB,UAAtB,UACI,uBAAOR,KAAK,OAAOH,MAAOb,EAAMyB,QAASC,SAAU1B,EAAM2B,eACzD,wBAAQX,KAAK,SAAb,4BCwEGY,E,4MAxEb/B,MAAQ,CACNgC,QAAU,CACR,CAAC3B,KAAO,QACR,CAACA,KAAO,OACR,CAACA,KAAO,UAEVuB,QAAU,I,EAGZE,aAAe,SAAClB,GACd,EAAKF,SAAS,CACZkB,QAAUhB,EAAEqB,OAAOjB,S,EAIvBW,UAAY,SAACf,GAEX,GADAA,EAAEC,iBACyB,KAAvB,EAAKb,MAAM4B,QACX,OAAO,EAGT,IAAIM,EAAa,EAAKlC,MAAM4B,QACxBO,EAAa,EAAKnC,MAAMgC,QAC5BG,EAAWC,KAAK,CAAC/B,KAAO6B,IACxB,EAAKxB,SAAS,CACZsB,QAAUG,EACVP,QAAU,M,EAKhBS,aAAe,SAAC5B,GACd,IAAI0B,EAAa,EAAKnC,MAAMgC,QAC5BG,EAAWG,OAAO7B,EAAO,GACzB,EAAKC,SAAS,CACZsB,QAAUG,K,EAIdI,WAAa,SAAC9B,EAAOO,GACnB,IAAImB,EAAa,EAAKnC,MAAMgC,QACfG,EAAW1B,GAClB,KAAYO,EAClB,EAAKN,SAAS,CACZsB,QAAUG,K,4CAId,WAAS,IAAD,OACCH,EAAWT,KAAKvB,MAAhBgC,QAEDQ,EADSR,EAAQS,OAErBT,EAAQU,KAAI,SAACC,EAAQlC,GACnB,OACE,cAAC,EAAD,CAAYL,QAASuC,EAAoBnC,OAAQ,EAAK6B,aAAc5B,MAAOA,EAAOK,KAAM,EAAKyB,YAA3D9B,MAItC,mDAEF,OACE,0BAASmC,UAAU,MAAnB,UACE,4CACA,cAAC,EAAD,CAAYhB,QAASL,KAAKvB,MAAM4B,QAASE,aAAcP,KAAKO,aAAcH,UAAWJ,KAAKI,YAC1F,6BACGa,W,GAnEOf,aCQHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ef9ab8a8.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Courselist extends Component {\r\n\r\n\r\n    state = {\r\n        isedit : false\r\n    }\r\n    // render course item\r\n    rendercourse = () =>{\r\n        return(\r\n            <li>\r\n                <span>{this.props.details.name}</span>\r\n                <button onClick={() => this.togglestate()}>Edit Course</button>\r\n                <button onClick={() => {this.props.delete(this.props.index)}}>Delete</button>\r\n            </li>\r\n        )\r\n    }\r\n\r\n\r\n    // changing isedit value when edit course clicked\r\n    togglestate = () =>{\r\n        let {isedit} =this.state\r\n        this.setState({\r\n            isedit : !isedit\r\n        })\r\n    }\r\n    \r\n    updatecourseitem =(e) =>{\r\n        e.preventDefault()\r\n        this.props.edit(this.props.index, this.input.value)\r\n        this.togglestate()\r\n    }\r\n    \r\n    // render update form\r\n    renderupdateform =() =>{\r\n        return(\r\n            <form onSubmit={this.updatecourseitem}>\r\n                <input type=\"text\" ref={(v)=>{this.input = v}} defaultValue={this.props.details.name}/>\r\n                <button>Edit Course</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n  render(){\r\n    let {isedit} = this.state\r\n    return(\r\n      <React.Fragment>\r\n        {isedit ?  this.renderupdateform() : this.rendercourse()}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Courselist;\r\n","import React from 'react'\r\n\r\nconst Courseform = (props) => {\r\n    return (\r\n        <form onSubmit={props.addcourse}>\r\n            <input type=\"text\" value={props.current} onChange={props.updatecourse}/>\r\n            <button type=\"submit\">Add Course</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Courseform ","import React, {Component} from 'react';\nimport Courselist from './component/courselist/courselist';\nimport Courseform from './component/formlist/courseform'\n\nclass App extends Component {\n\n  state = {\n    courses : [\n      {name : 'HTML'},\n      {name : 'Css'},\n      {name : 'React'}\n    ],\n    current : ''\n  }\n\n  updatecourse = (e) =>{\n    this.setState({\n      current : e.target.value\n    })\n  }\n\n  addcourse = (e) =>{\n    e.preventDefault()\n    if (this.state.current === ''){\n        return false\n    }\n    else{\n      let loccurrent = this.state.current\n      let loccourses = this.state.courses\n      loccourses.push({name : loccurrent})\n      this.setState({\n        courses : loccourses,\n        current : ''\n      })\n    }\n  }\n\n  deletecourse = (index) =>{\n    let loccourses = this.state.courses\n    loccourses.splice(index, 1)\n    this.setState({\n      courses : loccourses\n    })\n  }\n\n  editcourse = (index, value) =>{\n    let loccourses = this.state.courses\n    let course = loccourses[index]\n    course [\"name\"] = value\n    this.setState({\n      courses : loccourses\n    })\n  }\n\n  render(){\n    const {courses} = this.state\n    const length = courses.length\n    const courselist = length ? (\n      courses.map((course, index) => {\n        return(\n          <Courselist details={course} key={index} delete={this.deletecourse} index={index} edit={this.editcourse}/>\n        )\n      })\n    ) : (\n      <p>No Courses to Show</p>\n    )\n    return(\n      <section className=\"App\">\n        <h2>Add Course</h2>\n        <Courseform current={this.state.current} updatecourse={this.updatecourse} addcourse={this.addcourse}/>\n        <ul>\n          {courselist}\n        </ul>\n      </section>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}